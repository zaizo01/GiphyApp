{"version":3,"sources":["Components/AddCategory.jsx","Components/GhiphyGridItem.jsx","helpers/getGiphys.js","Components/GhiphyGrid.jsx","hooks/useFetchGiphy.js","GiphyApp.js","index.js"],"names":["Addcategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categorys","className","type","value","placeholder","onChange","target","Ghiphygriditem","title","url","src","alt","getGiphy","category","a","encodeURI","fetch","resp","json","data","giphys","map","img","id","images","downsized_medium","GhiphyGrid","loading","state","setstate","useEffect","then","imgs","useFetchGiphy","key","GiphyApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8OAwCeA,MApCf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAiBpC,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAS,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,OAOd,yBAAKO,UAAU,uBACX,2BACAC,KAAK,OACLC,MAAQV,EACRW,YAAY,YACZC,SApBc,SAAET,GACxBF,EAAeE,EAAEU,OAAOH,QAoBhBF,UAAU,+JC3BbM,EAAiB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKR,UAAU,cACX,yBAAKA,UAAU,uFACX,yBAAKS,IAAMD,EAAME,IAAMH,EAAQP,UAAU,8B,uBCL5CW,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdL,EAFc,iDAEyCM,UAAWF,GAFpD,+DAGGG,MAAOP,GAHV,cAGdQ,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAASD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE5B,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAXtB,kBAebW,GAfa,4CAAH,sDCGRM,EAAa,SAAC,GAAoB,IAAjBb,EAAgB,EAAhBA,SAAgB,ECFjB,SAAEA,GAAe,IAAD,EAEfrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAgBzC,OATAC,qBAAY,WACRlB,EAAUC,GAAWkB,MAAM,SAAAC,GACvBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGlB,CAACd,IAEGe,EDXwBK,CAAepB,GAAjCmB,EAH6B,EAGlCb,KAAWQ,EAHuB,EAGvBA,QAGnB,OACI,oCACQ,wBAAI1B,UAAU,mFAAd,IAAmGY,EAAnG,KACEc,GAAW,uBAAG1B,UAAU,uEAAb,cAEjB,yBAAKA,UAAU,0CAET+B,EAAKX,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAY,IAAMZ,EAAIC,IACLD,UEQVa,EAzBE,WAAO,IAAD,EAEiB3C,mBAAS,CAAC,WAF3B,mBAEZ4C,EAFY,KAEA7C,EAFA,KAInB,OACI,kBAAC,WAAD,KAEI,yBAAKU,UAAU,6BACX,wBAAIA,UAAU,iDAAd,aAGJ,kBAAC,EAAD,CAAaV,cAAiBA,IAE9B,wBAAIU,UAAU,qBAENmC,EAAWf,KAAK,SAAAR,GAAQ,OAAM,kBAAC,EAAD,CACAqB,IAAMrB,EACNA,SAAWA,UCd7DwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cace42c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Addcategory({ setcategories }) {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ){\r\n            setcategories( categorys => [ inputValue, ...categorys ] );\r\n            setinputValue('');\r\n        }\r\n      \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <div className=\"flex justify-center\">\r\n                <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                placeholder=\"Search...\"\r\n                onChange={ handleInputChange } \r\n                className=\"mt-4 w-full h-10 pl-4 border-2 border-gray-300 rounded-full shadow-lg placeholder-black focus:outline-none focus:bg-gray-300 focus:text-black max-w-6xl\"\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddcategory.propTypes = {\r\n  setcategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Addcategory;\r\n\r\n","import React from 'react'\r\n\r\nexport const Ghiphygriditem = ({ title, url}) => {\r\n   \r\n    return (\r\n        <div className=\"pl-3 pt-10\">\r\n            <div className=\"max-w-sm bg-whitle shadow-2xl rounded-lg mb-4 animate__animated animate__backInDown\">\r\n                <img src={ url } alt={ title } className=\"h-56 w-full rounded-lg\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGiphy = async( category ) => {\r\n\r\n    const url      =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=3Jd1GbD4mokIpS38hOHP1OcncbCH8TQr`;\r\n    const resp     = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const giphys = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return giphys;\r\n\r\n    \r\n}","import React from 'react'\r\nimport { Ghiphygriditem } from './GhiphyGridItem';\r\nimport { useFetchGiphy } from '../hooks/useFetchGiphy';\r\n\r\n\r\nexport const GhiphyGrid = ( { category } ) => {\r\n\r\n  \r\n    const { data:imgs, loading } = useFetchGiphy( category );\r\n\r\n  \r\n    return (\r\n        <>\r\n                <h3 className=\"text-2xl font-bold text-center capitalize animate__animated animate__backInDown\"> { category } </h3>\r\n                { loading && <p className=\"text-2xl font-semibold text-center animate__animated animate__flash\">loading...</p> }\r\n    \r\n            <div className=\"flex flex-row flex-wrap justify-center\">\r\n                {\r\n                  imgs.map( img => (\r\n                    <Ghiphygriditem\r\n                    key={ img.id }\r\n                    { ...img }\r\n                    />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGiphy } from \"../helpers/getGiphys\";\r\n\r\nexport const useFetchGiphy = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n        getGiphy( category ).then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport Addcategory from './Components/AddCategory';\r\nimport { GhiphyGrid } from './Components/GhiphyGrid';\r\n\r\nconst GiphyApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['Naruto']);\r\n\r\n    return ( \r\n        <Fragment>\r\n\r\n            <div className=\"w-full bg-indigo-500 py-2\">\r\n                <h2 className=\"text-3xl font-semibold text-center text-white\">GiphyApp</h2>\r\n            </div>\r\n\r\n            <Addcategory setcategories= { setcategories }/>\r\n\r\n            <ol className=\"pl-8 list-decimal\">\r\n                {\r\n                    categories.map( category => ( <GhiphyGrid\r\n                                                  key={ category } \r\n                                                  category={ category } /> ))\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n     )\r\n}\r\n \r\nexport default GiphyApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/tailwind.css';\nimport './assets/main.css';\nimport GiphyApp from './GiphyApp';\n\n\nReactDOM.render(\n    <GiphyApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}